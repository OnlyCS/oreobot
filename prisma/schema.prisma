datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "cargo prisma"
    output   = "../src/prisma/prisma_client.rs"
}

enum ChannelType {
    Text
    News
    Stage
    Voice
}

enum InteractionType {
    Command
    ModalSubmit
    MessageComponent
}

model User {
    id       String  @id
    username String
    nickname String?
    roles    Role[]

    admin    Boolean @default(false)
    verified Boolean @default(false)
    bot      Boolean @default(false)

    messages     Message[]
    interactions Interaction[]

    removed Boolean @default(false)
}

model Role {
    id    String @id
    name  String
    color String

    users      User[]
    color_role Boolean @default(false)

    deleted Boolean @default(false)
}

model Attachment {
    id         String @id
    filename   String
    url        String
    size_bytes BigInt

    message    Message @relation(fields: [message_id], references: [id])
    message_id String

    deleted Boolean @default(false)
}

model Message {
    id      String @id
    content String

    author    User   @relation(fields: [author_id], references: [id])
    author_id String

    channel    Channel @relation(fields: [channel_id], references: [id])
    channel_id String

    attachments Attachment[]

    created    DateTime @default(now())
    updated_at DateTime @updatedAt

    deleted Boolean @default(false)
    edited  Boolean @default(false)

    pin MessagePin?
}

model MessagePin {
    pinned_message_id String @id

    original    Message @relation(fields: [original_id], references: [id])
    original_id String  @unique

    removed        Boolean @default(false)
    removed_reason String?
}

model Channel {
    id    String      @id
    name  String
    topic String?
    nsfw  Boolean
    kind  ChannelType

    messages     Message[]
    interactions Interaction[]

    category    ChannelCategory? @relation(fields: [category_id], references: [id])
    category_id String?

    deleted Boolean @default(false)
}

model ChannelCategory {
    id       String    @id
    name     String
    channels Channel[]

    deleted Boolean @default(false)
}

model CommandInteractionData {
    command_id   String
    command_name String

    interaction    Interaction @relation(fields: [interaction_id], references: [id])
    interaction_id String      @unique
}

model Interaction {
    id   String          @id
    kind InteractionType

    channel    Channel @relation(fields: [channel_id], references: [id])
    channel_id String

    invoker    User   @relation(fields: [invoker_id], references: [id])
    invoker_id String

    created DateTime @default(now())

    // custom id for all except for commands, which has extra data
    command_data CommandInteractionData?
    custom_id    String?
}
