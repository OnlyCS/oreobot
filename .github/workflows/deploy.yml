name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy DotEnv to root
        run: echo "${{ secrets.DOTENV }}" > .env

      - name: Aliasing
        run: |
          alias on-server="ssh -i ssh_key ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR "

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Generate Prisma
        uses: actions-rs/cargo@v1
        with:
          command: prisma-release
          args: db push

      - name: Build app
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Build Dockerfile
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/oreobot:latest .

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Dockerfile
        run: docker push ${{ secrets.DOCKER_USERNAME }}/oreobot:latest

      - name: Save private key
        run: |
          echo "${{ secrets.SSH_KEY }}" > ssh_key
          chmod 600 ssh_key

      - name: Kill and stop docker container
        run: |
          on-server docker kill oreobot 2> /dev/null
          on-server docker rm oreobot 2> /dev/null

      - name: Pull and run docker container
        run: |
          on-server docker pull ${{ secrets.DOCKER_USERNAME }}/oreobot:latest
          on-server docker run -d --name oreobot ${{ secrets.DOCKER_USERNAME }}/oreobot:latest
